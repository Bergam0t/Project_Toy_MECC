---
title: "MECC Simulation Report"
execute:
  echo: false
format:
    html:
        # toc: true
        embed-resources: true
        # URL options
        link-external-icon: true
        link-external-newwindow: true
        # Reference options
        citations-hover: true
        footnotes-hover: true
        #####################
        # NHS Theme options #
        #####################
        css: "NHS_report_theme.css"
        callout-appearance: simple
        callout-collapse: true
        # Caption options
        cap-location: bottom
        # Title options
        title-block-banner: '#005EB8'
        backgroundcolor: '#f0f4f5'
        # Set font
        mainfont: 'Open Sans'
---

<!-- ![](resources\MECC.jpg){height=100} -->

```{python}
#| echo: false
#| label: get_data
import pandas as pd
import json

# Load session data from JSON
with open("session_data.json", "r") as f:
    session_data = json.load(f)

data_no_mecc = pd.read_csv("outputs/data_no_mecc.csv")
data_mecc = pd.read_csv("outputs/data_mecc.csv")

```

## All Simulation Parameters

### Population Parameters
 - Number of People: **`{python} session_data["N_people"]`** 
 - Initial Smoking Probability: **`{python} session_data["initial_smoking_prob"]`**
 - Chance of Visiting a Service per Month: **`{python} session_data["visit_prob"]`**
 - Base Quit Attempt Probability per Month: **`{python} session_data["quit_attempt_prob"]`**
 - Base Smoking Relapse per Month: **`{python} session_data["base_smoke_relapse_prob"]`**
    - *Relapse chance decreases over time of not smoking*

### Service Parameters
- Chance a Brief Intervention Made Without MECC: **`{python} session_data["mecc_effect"]`**

### MECC Parameters
 - Chance Making a Brief Intervention After MECC Training: **`{python} session_data["base_make_intervention_prob"]`**
 - Effect of a Brief Intervention on Chance Making a Quit Attempt: **`{python} session_data["intervention_effect"]`**
    - *Numbers less than 1 will decrease the probability*

### Simulation Parameters
 - Random Seed: **`{python} session_data["model_seed"]`**
 - Number of Months to Simulate: **`{python} session_data["num_steps"]`**
 - Animation Speed (seconds): **`{python} session_data["animation_speed"]`**

## Outputs

### Smoking Reduction (No MECC) 
```{python}
#| echo: false
# Calculate smoking reduction for model without MECC
initial_non_smokers_no_mecc = data_no_mecc['Total Not Smoking'].iloc[0]
final_non_smokers_no_mecc = data_no_mecc['Total Not Smoking'].iloc[-1]
reduction_no_mecc = (final_non_smokers_no_mecc / session_data["N_people"]) * 100
total_quits_no_mecc = final_non_smokers_no_mecc - initial_non_smokers_no_mecc

print(f"Smoking Reduction (No MECC): {reduction_no_mecc:.1f}%")
print(f"Total Quits (No MECC): {total_quits_no_mecc:.0f}")
```

### Smoking Reduction (With MECC) 
```{python}
#| echo: false
# Calculate smoking reduction for model with MECC
initial_non_smokers_mecc = data_mecc['Total Not Smoking'].iloc[0]
final_non_smokers_mecc = data_mecc['Total Not Smoking'].iloc[-1]
reduction_mecc = (final_non_smokers_mecc / session_data["N_people"]) * 100
total_quits_mecc = final_non_smokers_mecc - initial_non_smokers_mecc

print(f"Smoking Reduction (With MECC): {reduction_mecc:.1f}%")
print(f"Total Quits (With MECC): {total_quits_mecc:.0f}")
```

### MECC Impact

```{python}
#| echo: false
# Calculate additional quits due to MECC
mecc_improvement = final_non_smokers_mecc - final_non_smokers_no_mecc
mecc_impact_percentage = (mecc_improvement / session_data["N_people"]) * 100

print(f"MECC Impact: {mecc_improvement:.0f} additional quits")
print(f"MECC Impact Percentage: {mecc_impact_percentage:.1f}%")
```

